# include:
#     - local: 'frontend/docker-compose.deploy.yml'
# image: docker/compose # with docker compose
image: docker:19.03.12

services:
  - docker:19.03.12-dind

stages:
  - build
#   - test
  - release
  # - deploy

variables:
  # Use TLS https://docs.gitlab.com/ee/ci/docker/using_docker_build.html#tls-enabled
  DOCKER_HOST: tcp://docker:2376
  # This will instruct Docker not to start over TLS.
  DOCKER_TLS_CERTDIR: ""
  #Otherwise
  # DOCKER_TLS_CERTDIR: "/certs"
  CONTAINER_TEST_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  CONTAINER_RELEASE_IMAGE: $CI_REGISTRY_IMAGE:latest
  # DOCKER_HOST: tcp://docker:2375
  # DOCKER_DRIVER: overlay

before_script:
  - docker info
  # - apk update
  # - apk upgrade
  # - apk add python python-dev py-pip build-base
  # - pip install docker-compose #will be required for deploy
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

build:
  stage: build
  script:
    - docker build --pull -t $CONTAINER_TEST_IMAGE ./frontend
    - docker push $CONTAINER_TEST_IMAGE

# test1:
#   stage: test
#   script:
#     - docker pull $CONTAINER_TEST_IMAGE
#     - docker run $CONTAINER_TEST_IMAGE /script/to/run/tests

# test2:
#   stage: test
#   script:
#     - docker pull $CONTAINER_TEST_IMAGE
#     - docker run $CONTAINER_TEST_IMAGE /script/to/run/another/test

release-image:
  stage: release
  script:
    - docker pull $CONTAINER_TEST_IMAGE
    - docker tag $CONTAINER_TEST_IMAGE $CONTAINER_RELEASE_IMAGE
    - docker push $CONTAINER_RELEASE_IMAGE
  # only:
  #   - master

# deploy:
#   stage: deploy
#   script:
#     - ./deploy.sh
#   only:
#     - master